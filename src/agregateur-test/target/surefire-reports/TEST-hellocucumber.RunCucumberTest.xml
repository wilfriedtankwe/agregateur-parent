<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="hellocucumber.RunCucumberTest" time="1.28" tests="35" errors="34" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/test-classes:/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/classes:/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-production/target/agregateur-production-0.0.1-SNAPSHOT.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.7.18/spring-boot-starter-data-jpa-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.18/spring-boot-starter-aop-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/spring-aop/5.3.31/spring-aop-5.3.31.jar:/home/wilfried/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.18/spring-boot-starter-jdbc-2.7.18.jar:/home/wilfried/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/home/wilfried/.m2/repository/org/springframework/spring-jdbc/5.3.31/spring-jdbc-5.3.31.jar:/home/wilfried/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/wilfried/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/wilfried/.m2/repository/org/hibernate/hibernate-core/5.6.15.Final/hibernate-core-5.6.15.Final.jar:/home/wilfried/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/wilfried/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/wilfried/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/wilfried/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/wilfried/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/wilfried/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/wilfried/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/wilfried/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/wilfried/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/wilfried/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/wilfried/.m2/repository/org/springframework/data/spring-data-jpa/2.7.18/spring-data-jpa-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/data/spring-data-commons/2.7.18/spring-data-commons-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/spring-orm/5.3.31/spring-orm-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-context/5.3.31/spring-context-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-tx/5.3.31/spring-tx-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-beans/5.3.31/spring-beans-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-core/5.3.31/spring-core-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-jcl/5.3.31/spring-jcl-5.3.31.jar:/home/wilfried/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/home/wilfried/.m2/repository/org/springframework/spring-aspects/5.3.31/spring-aspects-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.18/spring-boot-starter-validation-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.18/spring-boot-starter-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot/2.7.18/spring-boot-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.18/spring-boot-autoconfigure-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.18/spring-boot-starter-logging-2.7.18.jar:/home/wilfried/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/home/wilfried/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/home/wilfried/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/home/wilfried/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/home/wilfried/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/home/wilfried/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/wilfried/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/home/wilfried/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.83/tomcat-embed-el-9.0.83.jar:/home/wilfried/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/home/wilfried/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.18/spring-boot-starter-web-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.18/spring-boot-starter-json-2.7.18.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.18/spring-boot-starter-tomcat-2.7.18.jar:/home/wilfried/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.83/tomcat-embed-core-9.0.83.jar:/home/wilfried/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.83/tomcat-embed-websocket-9.0.83.jar:/home/wilfried/.m2/repository/org/springframework/spring-web/5.3.31/spring-web-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-webmvc/5.3.31/spring-webmvc-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-expression/5.3.31/spring-expression-5.3.31.jar:/home/wilfried/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/home/wilfried/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-java/7.29.0/cucumber-java-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-core/7.29.0/cucumber-core-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-gherkin/7.29.0/cucumber-gherkin-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.29.0/cucumber-gherkin-messages-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/gherkin/35.1.0/gherkin-35.1.0.jar:/home/wilfried/.m2/repository/io/cucumber/messages/29.0.1/messages-29.0.1.jar:/home/wilfried/.m2/repository/io/cucumber/pretty-formatter/2.3.0/pretty-formatter-2.3.0.jar:/home/wilfried/.m2/repository/io/cucumber/query/14.3.0/query-14.3.0.jar:/home/wilfried/.m2/repository/io/cucumber/teamcity-formatter/0.1.1/teamcity-formatter-0.1.1.jar:/home/wilfried/.m2/repository/io/cucumber/testng-xml-formatter/0.6.0/testng-xml-formatter-0.6.0.jar:/home/wilfried/.m2/repository/io/cucumber/tag-expressions/6.1.2/tag-expressions-6.1.2.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-expressions/18.0.1/cucumber-expressions-18.0.1.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-json-formatter/0.2.1/cucumber-json-formatter-0.2.1.jar:/home/wilfried/.m2/repository/io/cucumber/datatable/7.29.0/datatable-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-plugin/7.29.0/cucumber-plugin-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/docstring/7.29.0/docstring-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/html-formatter/21.15.1/html-formatter-21.15.1.jar:/home/wilfried/.m2/repository/io/cucumber/junit-xml-formatter/0.9.0/junit-xml-formatter-0.9.0.jar:/home/wilfried/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/home/wilfried/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.29.0/cucumber-junit-platform-engine-7.29.0.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-engine/1.13.4/junit-platform-engine-1.13.4.jar:/home/wilfried/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-commons/1.13.4/junit-platform-commons-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite/1.13.4/junit-platform-suite-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite-api/1.13.4/junit-platform-suite-api-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.13.4/junit-platform-suite-engine-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.13.4/junit-platform-suite-commons-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-launcher/1.13.4/junit-platform-launcher-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.13.4/junit-jupiter-api-5.13.4.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.13.4/junit-jupiter-params-5.13.4.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.13.4/junit-jupiter-engine-5.13.4.jar:/home/wilfried/.m2/repository/org/assertj/assertj-core/3.27.5/assertj-core-3.27.5.jar:/home/wilfried/.m2/repository/net/bytebuddy/byte-buddy/1.17.7/byte-buddy-1.17.7.jar:"/>
    <property name="java.vm.vendor" value="Eclipse Adoptium"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://adoptium.net/"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="FR"/>
    <property name="sun.boot.library.path" value="/home/wilfried/.sdkman/candidates/java/17.0.12-tem/lib"/>
    <property name="sun.java.command" value="/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/surefire/surefirebooter-20251017105139020_3.jar /run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/surefire 2025-10-17T10-51-38_896-jvmRun1 surefire-20251017105139020_1tmp surefire_0-20251017105139020_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/test-classes:/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/classes:/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-production/target/agregateur-production-0.0.1-SNAPSHOT.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.7.18/spring-boot-starter-data-jpa-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.7.18/spring-boot-starter-aop-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/spring-aop/5.3.31/spring-aop-5.3.31.jar:/home/wilfried/.m2/repository/org/aspectj/aspectjweaver/1.9.7/aspectjweaver-1.9.7.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.7.18/spring-boot-starter-jdbc-2.7.18.jar:/home/wilfried/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/home/wilfried/.m2/repository/org/springframework/spring-jdbc/5.3.31/spring-jdbc-5.3.31.jar:/home/wilfried/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/home/wilfried/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/home/wilfried/.m2/repository/org/hibernate/hibernate-core/5.6.15.Final/hibernate-core-5.6.15.Final.jar:/home/wilfried/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/home/wilfried/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/wilfried/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/home/wilfried/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/wilfried/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/home/wilfried/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/wilfried/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/wilfried/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/wilfried/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/wilfried/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/wilfried/.m2/repository/org/springframework/data/spring-data-jpa/2.7.18/spring-data-jpa-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/data/spring-data-commons/2.7.18/spring-data-commons-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/spring-orm/5.3.31/spring-orm-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-context/5.3.31/spring-context-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-tx/5.3.31/spring-tx-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-beans/5.3.31/spring-beans-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-core/5.3.31/spring-core-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-jcl/5.3.31/spring-jcl-5.3.31.jar:/home/wilfried/.m2/repository/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar:/home/wilfried/.m2/repository/org/springframework/spring-aspects/5.3.31/spring-aspects-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.7.18/spring-boot-starter-validation-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter/2.7.18/spring-boot-starter-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot/2.7.18/spring-boot-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.7.18/spring-boot-autoconfigure-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.7.18/spring-boot-starter-logging-2.7.18.jar:/home/wilfried/.m2/repository/ch/qos/logback/logback-classic/1.2.12/logback-classic-1.2.12.jar:/home/wilfried/.m2/repository/ch/qos/logback/logback-core/1.2.12/logback-core-1.2.12.jar:/home/wilfried/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.17.2/log4j-to-slf4j-2.17.2.jar:/home/wilfried/.m2/repository/org/apache/logging/log4j/log4j-api/2.17.2/log4j-api-2.17.2.jar:/home/wilfried/.m2/repository/org/slf4j/jul-to-slf4j/1.7.36/jul-to-slf4j-1.7.36.jar:/home/wilfried/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/home/wilfried/.m2/repository/org/yaml/snakeyaml/1.30/snakeyaml-1.30.jar:/home/wilfried/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.83/tomcat-embed-el-9.0.83.jar:/home/wilfried/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.5.Final/hibernate-validator-6.2.5.Final.jar:/home/wilfried/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.7.18/spring-boot-starter-web-2.7.18.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.7.18/spring-boot-starter-json-2.7.18.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.13.5/jackson-databind-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.13.5/jackson-annotations-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.13.5/jackson-core-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.13.5/jackson-datatype-jdk8-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.13.5/jackson-datatype-jsr310-2.13.5.jar:/home/wilfried/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.13.5/jackson-module-parameter-names-2.13.5.jar:/home/wilfried/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.7.18/spring-boot-starter-tomcat-2.7.18.jar:/home/wilfried/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.83/tomcat-embed-core-9.0.83.jar:/home/wilfried/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.83/tomcat-embed-websocket-9.0.83.jar:/home/wilfried/.m2/repository/org/springframework/spring-web/5.3.31/spring-web-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-webmvc/5.3.31/spring-webmvc-5.3.31.jar:/home/wilfried/.m2/repository/org/springframework/spring-expression/5.3.31/spring-expression-5.3.31.jar:/home/wilfried/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/home/wilfried/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-java/7.29.0/cucumber-java-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-core/7.29.0/cucumber-core-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-gherkin/7.29.0/cucumber-gherkin-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-gherkin-messages/7.29.0/cucumber-gherkin-messages-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/gherkin/35.1.0/gherkin-35.1.0.jar:/home/wilfried/.m2/repository/io/cucumber/messages/29.0.1/messages-29.0.1.jar:/home/wilfried/.m2/repository/io/cucumber/pretty-formatter/2.3.0/pretty-formatter-2.3.0.jar:/home/wilfried/.m2/repository/io/cucumber/query/14.3.0/query-14.3.0.jar:/home/wilfried/.m2/repository/io/cucumber/teamcity-formatter/0.1.1/teamcity-formatter-0.1.1.jar:/home/wilfried/.m2/repository/io/cucumber/testng-xml-formatter/0.6.0/testng-xml-formatter-0.6.0.jar:/home/wilfried/.m2/repository/io/cucumber/tag-expressions/6.1.2/tag-expressions-6.1.2.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-expressions/18.0.1/cucumber-expressions-18.0.1.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-json-formatter/0.2.1/cucumber-json-formatter-0.2.1.jar:/home/wilfried/.m2/repository/io/cucumber/datatable/7.29.0/datatable-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-plugin/7.29.0/cucumber-plugin-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/docstring/7.29.0/docstring-7.29.0.jar:/home/wilfried/.m2/repository/io/cucumber/html-formatter/21.15.1/html-formatter-21.15.1.jar:/home/wilfried/.m2/repository/io/cucumber/junit-xml-formatter/0.9.0/junit-xml-formatter-0.9.0.jar:/home/wilfried/.m2/repository/io/cucumber/ci-environment/10.0.1/ci-environment-10.0.1.jar:/home/wilfried/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/wilfried/.m2/repository/io/cucumber/cucumber-junit-platform-engine/7.29.0/cucumber-junit-platform-engine-7.29.0.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-engine/1.13.4/junit-platform-engine-1.13.4.jar:/home/wilfried/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-commons/1.13.4/junit-platform-commons-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite/1.13.4/junit-platform-suite-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite-api/1.13.4/junit-platform-suite-api-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite-engine/1.13.4/junit-platform-suite-engine-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-suite-commons/1.13.4/junit-platform-suite-commons-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/platform/junit-platform-launcher/1.13.4/junit-platform-launcher-1.13.4.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter/5.10.2/junit-jupiter-5.10.2.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.13.4/junit-jupiter-api-5.13.4.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.13.4/junit-jupiter-params-5.13.4.jar:/home/wilfried/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.13.4/junit-jupiter-engine-5.13.4.jar:/home/wilfried/.m2/repository/org/assertj/assertj-core/3.27.5/assertj-core-3.27.5.jar:/home/wilfried/.m2/repository/net/bytebuddy/byte-buddy/1.17.7/byte-buddy-1.17.7.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/wilfried"/>
    <property name="user.language" value="fr"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-07-16"/>
    <property name="java.home" value="/home/wilfried/.sdkman/candidates/java/17.0.12-tem"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test/target/surefire/surefirebooter-20251017105139020_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.12+7"/>
    <property name="user.name" value="wilfried"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.16.11-200.fc42.x86_64"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Temurin-17.0.12+7"/>
    <property name="localRepository" value="/home/wilfried/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/adoptium/adoptium-support/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="17.0.12"/>
    <property name="user.dir" value="/run/media/wilfried/Nouveau nom/Projects/Projet Dimsoft/agregateur-parent/src/agregateur-test"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Eclipse Adoptium"/>
    <property name="java.vm.version" value="17.0.12+7"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.1" classname="RunCucumberTest" time="0.205">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Un fichier avec le chemin {string} et donc l&apos;etat est {string}&quot;)&#10;public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente d&apos;ouvrir le fichier&quot;)&#10;public void je_tente_d_ouvrir_le_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher {string}&quot;)&#10;public void le_système_doit_afficher(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher {string}")
public void le_système_doit_afficher(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Ouverture d’un fichier selon son état                                                                            &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:30&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mUn fichier avec le chemin "src/test/resources/hellocucumber/fichier/CA20250820_115728.csv" et donc l'etat est "existant"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente d'ouvrir le fichier&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "fichier ouvert avec succès"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.2" classname="RunCucumberTest" time="0.018">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Un fichier avec le chemin {string} et donc l&apos;etat est {string}&quot;)&#10;public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente d&apos;ouvrir le fichier&quot;)&#10;public void je_tente_d_ouvrir_le_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher \&quot;une erreur \&quot;fichier introuvable\&quot; doit être remontée\&quot;&quot;)&#10;public void le_système_doit_afficher_une_erreur_fichier_introuvable_doit_être_remontée() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"fichier introuvable\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_fichier_introuvable_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Ouverture d’un fichier selon son état                                                     &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:31&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mUn fichier avec le chemin "src/test/resources/fichier/!#@!@LCL.csv" et donc l'etat est "manquant"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente d'ouvrir le fichier&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "une erreur "fichier introuvable" doit être remontée"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.3" classname="RunCucumberTest" time="0.017">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Un fichier avec le chemin {string} et donc l&apos;etat est {string}&quot;)&#10;public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente d&apos;ouvrir le fichier&quot;)&#10;public void je_tente_d_ouvrir_le_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher \&quot;une erreur \&quot;chemin invalide\&quot; doit être remontée\&quot;&quot;)&#10;public void le_système_doit_afficher_une_erreur_chemin_invalide_doit_être_remontée() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"chemin invalide\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_chemin_invalide_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Ouverture d’un fichier selon son état                                        &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:32&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mUn fichier avec le chemin "!@!*&?*?invalid.csv" et donc l'etat est "chemin invalide"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente d'ouvrir le fichier&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "une erreur "chemin invalide" doit être remontée"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.4" classname="RunCucumberTest" time="0.018">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Un fichier avec le chemin {string} et donc l&apos;etat est {string}&quot;)&#10;public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente d&apos;ouvrir le fichier&quot;)&#10;public void je_tente_d_ouvrir_le_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher \&quot;une erreur \&quot;permission de lecture refusée\&quot; doit être remontée\&quot;&quot;)&#10;public void le_système_doit_afficher_une_erreur_permission_de_lecture_refusée_doit_être_remontée() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"permission de lecture refusée\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_permission_de_lecture_refusée_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Ouverture d’un fichier selon son état                                                                                                                       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:33&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mUn fichier avec le chemin "src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv" et donc l'etat est "existant sans droits"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente d'ouvrir le fichier&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "une erreur "permission de lecture refusée" doit être remontée"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.5" classname="RunCucumberTest" time="0.017">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Un fichier avec le chemin {string} et donc l&apos;etat est {string}&quot;)&#10;public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente d&apos;ouvrir le fichier&quot;)&#10;public void je_tente_d_ouvrir_le_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher \&quot;une erreur \&quot;fichier illisible\&quot; doit être remontée\&quot;&quot;)&#10;public void le_système_doit_afficher_une_erreur_fichier_illisible_doit_être_remontée() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"fichier illisible\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_fichier_illisible_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Ouverture d’un fichier selon son état                                                               &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:34&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mUn fichier avec le chemin "src/test/resources/hellocucumber/fichier/LCL2.csv" et donc l'etat est "corrompu"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente d'ouvrir le fichier&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "une erreur "fichier illisible" doit être remontée"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - vérification de la structure d&apos;un fichier - Examples - Example #1.1" classname="RunCucumberTest" time="0.035">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;que le nom du fichier {string} commence par CA&quot;)&#10;public void que_le_nom_du_fichier_commence_par_ca(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je me rend a la ligne onze du fichier {string}&quot;)&#10;public void je_me_rend_a_la_ligne_onze_du_fichier(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je dois retrouvé les champs nommés Date;Libell�;D�bit euros;Cr�dit euros;&quot;)&#10;public void je_dois_retrouvé_les_champs_nommés_date_libell_d_bit_euros_cr_dit_euros() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("que le nom du fichier {string} commence par CA")
public void que_le_nom_du_fichier_commence_par_ca(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je me rend a la ligne onze du fichier {string}")
public void je_me_rend_a_la_ligne_onze_du_fichier(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je dois retrouvé les champs nommés Date;Libell�;D�bit euros;Cr�dit euros;")
public void je_dois_retrouvé_les_champs_nommés_date_libell_d_bit_euros_cr_dit_euros() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m vérification de la structure d'un fichier                                                      &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:44&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mque le nom du fichier "src/test/resources/hellocucumber/fichier/CA20250820_115728.csv" commence par CA&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mje me rend a la ligne onze du fichier "src/test/resources/hellocucumber/fichier/CA20250820_115728.csv"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje dois retrouvé les champs nommés Date;Libell�;D�bit euros;Cr�dit euros;&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - vérification de la structure d&apos;un fichier - Examples - Example #1.1" classname="RunCucumberTest" time="0.028">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;que le nom du fichier {string} commence par T_cpte&quot;)&#10;public void que_le_nom_du_fichier_commence_par_t_cpte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je me place a la deuxieme ligne et je compte le nombre de colonne du fichier {string}&quot;)&#10;public void je_me_place_a_la_deuxieme_ligne_et_je_compte_le_nombre_de_colonne_du_fichier(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je dois obtenir huit colonnes&quot;)&#10;public void je_dois_obtenir_huit_colonnes() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("que le nom du fichier {string} commence par T_cpte")
public void que_le_nom_du_fichier_commence_par_t_cpte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je me place a la deuxieme ligne et je compte le nombre de colonne du fichier {string}")
public void je_me_place_a_la_deuxieme_ligne_et_je_compte_le_nombre_de_colonne_du_fichier(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je dois obtenir huit colonnes")
public void je_dois_obtenir_huit_colonnes() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m vérification de la structure d'un fichier                                                                                                                           &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:54&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mque le nom du fichier "src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv" commence par T_cpte&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mje me place a la deuxieme ligne et je compte le nombre de colonne du fichier "src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje dois obtenir huit colonnes&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - vérification de la structure d&apos;un fichier quelconque - Examples - Example #1.1" classname="RunCucumberTest" time="0.023">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 3 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;que le nom du fichier ne commence ni par CA ni par T_cpte&quot;)&#10;public void que_le_nom_du_fichier_ne_commence_ni_par_ca_ni_par_t_cpte() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;renvoyer un message {string} d&apos;érreur&quot;)&#10;public void renvoyer_un_message_d_érreur(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("que le nom du fichier ne commence ni par CA ni par T_cpte")
public void que_le_nom_du_fichier_ne_commence_ni_par_ca_ni_par_t_cpte() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("renvoyer un message {string} d'érreur")
public void renvoyer_un_message_d_érreur(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m vérification de la structure d'un fichier quelconque       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:62&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mque le nom du fichier ne commence ni par CA ni par T_cpte&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mrenvoyer un message "ce fichier ne peut etre importé" d'érreur&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.1" classname="RunCucumberTest" time="0.038">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} valide contenant le numéro de compte {string}&quot;)&#10;public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le système lit le numéro de compte {string}&quot;)&#10;public void le_système_lit_le_numéro_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;l&apos;extrait du fichier&quot;)&#10;public void l_extrait_du_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte                                                                                                       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:74&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/CA20250820_115728.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/CA20250820_115728.csv" valide contenant le numéro de compte "04109661797"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle système lit le numéro de compte "04109661797"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22ml'extrait du fichier&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.2" classname="RunCucumberTest" time="0.017">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} valide contenant le numéro de compte {string}&quot;)&#10;public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le système lit le numéro de compte {string}&quot;)&#10;public void le_système_lit_le_numéro_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;l&apos;extrait du fichier&quot;)&#10;public void l_extrait_du_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte                                                                                                                                        &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:75&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv" valide contenant le numéro de compte "01047 058113K"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle système lit le numéro de compte "01047 058113K"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22ml'extrait du fichier&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.3" classname="RunCucumberTest" time="0.018">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} valide contenant le numéro de compte {string}&quot;)&#10;public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le système lit le numéro de compte {string}&quot;)&#10;public void le_système_lit_le_numéro_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;l&apos;extrait du fichier&quot;)&#10;public void l_extrait_du_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte                                                                                                                                        &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:76&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv" valide contenant le numéro de compte "01049 911662L"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle système lit le numéro de compte "01049 911662L"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22ml'extrait du fichier&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.4" classname="RunCucumberTest" time="0.023">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} valide contenant le numéro de compte {string}&quot;)&#10;public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le système lit le numéro de compte {string}&quot;)&#10;public void le_système_lit_le_numéro_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;l&apos;extrait du fichier&quot;)&#10;public void l_extrait_du_fichier() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte                                                                                                                                        &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:77&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv" valide contenant le numéro de compte "00737 691594V"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle système lit le numéro de compte "00737 691594V"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22ml'extrait du fichier&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.1" classname="RunCucumberTest" time="0.018">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                                 &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:86&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/CA.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/CA.csv" et rencontre la situation "nom de fichier sans numéro"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "nom de fichier invalide" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.2" classname="RunCucumberTest" time="0.023">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                              &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:87&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/CA.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/CA.csv" et rencontre la situation "contenu du fichier vide"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "ce fichier est vide" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.3" classname="RunCucumberTest" time="0.015">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                                 &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:88&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/LCL.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/LCL.csv" et rencontre la situation "numéro de compte manquant"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "aucun numero a ete trouve" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.4" classname="RunCucumberTest" time="0.035">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                               &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:89&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/LCL.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/LCL.csv" et rencontre la situation "contenu du fichier vide"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "ce fichier LCL est vide" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.5" classname="RunCucumberTest" time="0.038">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                                  &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:90&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/LCL1.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/LCL1.csv" et rencontre la situation "numéro de compte manquant"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "aucun numero a ete trouve" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.6" classname="RunCucumberTest" time="0.021">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                                &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:91&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/LCL1.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/LCL1.csv" et rencontre la situation "contenu du fichier vide"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "ce fichier LCL est vide" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.7" classname="RunCucumberTest" time="0.038">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                                  &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:92&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/LCL2.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/LCL2.csv" et rencontre la situation "numéro de compte manquant"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "aucun numero a ete trouve" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.8" classname="RunCucumberTest" time="0.025">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier {string} se trouve dans le répertoire d&apos;entrée&quot;)&#10;public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;le système ouvre le fichier {string} et rencontre la situation {string}&quot;)&#10;public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;une erreur {string} est levée&quot;)&#10;public void une_erreur_est_levée(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération du numéro de compte avec échec                                                                                &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:93&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier "src/test/resources/hellocucumber/fichier/LCL2.csv" se trouve dans le répertoire d'entrée&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mle système ouvre le fichier "src/test/resources/hellocucumber/fichier/LCL2.csv" et rencontre la situation "contenu du fichier vide"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mune erreur "ce fichier LCL est vide" est levée&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte non existant - Examples - Example #1.1" classname="RunCucumberTest" time="0.013">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne un message d&apos;erreur  {string} si elle ne s&apos;y trouve pas&quot;)&#10;public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte non existant                    &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:105&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "04109661797"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X61797" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne un message d'erreur  "Numero de compte pas pris en charge" si elle ne s'y trouve pas&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte non existant - Examples - Example #1.2" classname="RunCucumberTest" time="0.02">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne un message d&apos;erreur  {string} si elle ne s&apos;y trouve pas&quot;)&#10;public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte non existant                    &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:106&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "00737691594V"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X1594V" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne un message d'erreur  "Numero de compte pas pris en charge" si elle ne s'y trouve pas&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte non existant - Examples - Example #1.3" classname="RunCucumberTest" time="0.017">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne un message d&apos;erreur  {string} si elle ne s&apos;y trouve pas&quot;)&#10;public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte non existant                    &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:107&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "01049911662L"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X1662L" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne un message d'erreur  "Numero de compte pas pris en charge" si elle ne s'y trouve pas&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte non existant - Examples - Example #1.4" classname="RunCucumberTest" time="0.026">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne un message d&apos;erreur  {string} si elle ne s&apos;y trouve pas&quot;)&#10;public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte non existant                    &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:108&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "0107058113K"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X8113K" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne un message d'erreur  "Numero de compte pas pris en charge" si elle ne s'y trouve pas&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte existant - Examples - Example #1.1" classname="RunCucumberTest" time="0.027">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne la valeur {string} correspondante si elle se trouve dans la base&quot;)&#10;public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte existant       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:118&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "00737691594V"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X1594V" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne la valeur "<bank_id>" correspondante si elle se trouve dans la base&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte existant - Examples - Example #1.2" classname="RunCucumberTest" time="0.012">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne la valeur {string} correspondante si elle se trouve dans la base&quot;)&#10;public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte existant       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:119&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "01049911662L"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X1662L" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne la valeur "<bank_id>" correspondante si elle se trouve dans la base&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte existant - Examples - Example #1.3" classname="RunCucumberTest" time="0.012">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne la valeur {string} correspondante si elle se trouve dans la base&quot;)&#10;public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte existant       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:120&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "0107058113K"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X8113K" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne la valeur "<bank_id>" correspondante si elle se trouve dans la base&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Récupération de l&apos;id de la banque avec numéro de compte existant - Examples - Example #1.4" classname="RunCucumberTest" time="0.012">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;un numero de compte {string}&quot;)&#10;public void un_numero_de_compte(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je le formate en une  {string} selon les regles:&quot;)&#10;public void je_le_formate_en_une_selon_les_regles(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je recherche valeur formatée dans la colonne {string} de la base&quot;)&#10;public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;je retourne la valeur {string} correspondante si elle se trouve dans la base&quot;)&#10;public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Récupération de l'id de la banque avec numéro de compte existant       &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:121&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mun numero de compte "04109661797"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe le formate en une  "X61797" selon les regles:&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mje recherche valeur formatée dans la colonne "title" de la base&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mje retourne la valeur "<bank_id>" correspondante si elle se trouve dans la base&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - agregation des données d&apos;une transaction issue d&apos;un fichier conforme et qui n&apos;existe pas en base de données" classname="RunCucumberTest" time="0.015">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 5 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;le repertoire {string} correctement ouvert&quot;)&#10;public void le_repertoire_correctement_ouvert(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;dont la structure a été correctement identifiée et les numéros de {string}  et l&apos;id  {string} de la banque ont été correctement recupérés&quot;)&#10;public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je lance l&apos;agregation des données des transactions du fichier {string} dans la table budget&quot;)&#10;public void je_lance_l_agregation_des_données_des_transactions_du_fichier_dans_la_table_budget(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;la table budget contiendra les données de la nouvelle transaction le programme lui retournera un message de confirmation de copie de la forme {string}&quot;)&#10;public void la_table_budget_contiendra_les_données_de_la_nouvelle_transaction_le_programme_lui_retournera_un_message_de_confirmation_de_copie_de_la_forme(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données des transactions du fichier {string} dans la table budget")
public void je_lance_l_agregation_des_données_des_transactions_du_fichier_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la table budget contiendra les données de la nouvelle transaction le programme lui retournera un message de confirmation de copie de la forme {string}")
public void la_table_budget_contiendra_les_données_de_la_nouvelle_transaction_le_programme_lui_retournera_un_message_de_confirmation_de_copie_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario:&amp#27;[22m agregation des données d'une transaction issue d'un fichier conforme et qui n'existe pas en base de données                                                                         &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:125&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mle repertoire "src/test/resources/com/comptabilitytest/fichier" correctement ouvert&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mdont la structure a été correctement identifiée et les numéros de "compte"  et l'id  "bank" de la banque ont été correctement recupérés&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mje lance l'agregation des données des transactions du fichier "fichier" dans la table budget&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mla table budget contiendra les données de la nouvelle transaction le programme lui retournera un message de confirmation de copie de la forme "la copie s'est parfaitement deroulée"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - agregation des données d&apos;une transaction issue d&apos;un fichier conforme et qui existe en base de données" classname="RunCucumberTest" time="0.017">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 6 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;le repertoire {string} correctement ouvert&quot;)&#10;public void le_repertoire_correctement_ouvert(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;dont la structure a été correctement identifiée et les numéros de {string}  et l&apos;id  {string} de la banque ont été correctement recupérés&quot;)&#10;public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je lance l&apos;agregation des données d&apos;une transaction du fichier {string} qui existent déja dans la table Budget&quot;)&#10;public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le programme lui retournera un message d&apos;erreur de la forme {string}&quot;)&#10;public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;la copie s&apos;arrête  la table budget ne contient pas de nouvelle valeur&quot;)&#10;public void la_copie_s_arrête_la_table_budget_ne_contient_pas_de_nouvelle_valeur() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données d'une transaction du fichier {string} qui existent déja dans la table Budget")
public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui retournera un message d'erreur de la forme {string}")
public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la copie s'arrête  la table budget ne contient pas de nouvelle valeur")
public void la_copie_s_arrête_la_table_budget_ne_contient_pas_de_nouvelle_valeur() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario:&amp#27;[22m agregation des données d'une transaction issue d'un fichier conforme et qui existe en base de données                                 &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:131&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mle repertoire "src/test/resources/com/comptabilitytest/fichier" correctement ouvert&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mdont la structure a été correctement identifiée et les numéros de "compte"  et l'id  "bank" de la banque ont été correctement recupérés&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mje lance l'agregation des données d'une transaction du fichier "fichier" qui existent déja dans la table Budget&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle programme lui retournera un message d'erreur de la forme "copie annulée aucune donnée copiées"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mla copie s'arrête  la table budget ne contient pas de nouvelle valeur&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - agregation des données d&apos;une transaction issue d&apos;un fichier conforme et qui existe en base de données" classname="RunCucumberTest" time="0.029">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 7 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;le repertoire {string} correctement ouvert&quot;)&#10;public void le_repertoire_correctement_ouvert(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;dont la structure a été correctement identifiée et les numéros de {string}  et l&apos;id  {string} de la banque ont été correctement recupérés&quot;)&#10;public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je lance l&apos;agregation des données d&apos;une transaction du fichier {string} qui existent déja dans la table Budget&quot;)&#10;public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le programme lui retournera un message d&apos;erreur de la forme {string}&quot;)&#10;public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;la table budget contiendra les données de la nouvelle transaction qui ont été corectement copié avant cette transaction&quot;)&#10;public void la_table_budget_contiendra_les_données_de_la_nouvelle_transaction_qui_ont_été_corectement_copié_avant_cette_transaction() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le programme lui posera une question de la forme {string}&quot;)&#10;public void le_programme_lui_posera_une_question_de_la_forme(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données d'une transaction du fichier {string} qui existent déja dans la table Budget")
public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui retournera un message d'erreur de la forme {string}")
public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la table budget contiendra les données de la nouvelle transaction qui ont été corectement copié avant cette transaction")
public void la_table_budget_contiendra_les_données_de_la_nouvelle_transaction_qui_ont_été_corectement_copié_avant_cette_transaction() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui posera une question de la forme {string}")
public void le_programme_lui_posera_une_question_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario:&amp#27;[22m agregation des données d'une transaction issue d'un fichier conforme et qui existe en base de données                                   &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:138&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mle repertoire "src/test/resources/com/comptabilitytest/fichier" correctement ouvert&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mdont la structure a été correctement identifiée et les numéros de "compte"  et l'id  "bank" de la banque ont été correctement recupérés&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mje lance l'agregation des données d'une transaction du fichier "fichier" qui existent déja dans la table Budget&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle programme lui retournera un message d'erreur de la forme "les données de cette transaction existent en BD"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mla table budget contiendra les données de la nouvelle transaction qui ont été corectement copié avant cette transaction&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mle programme lui posera une question de la forme "les données qui précède cette transaction ont été copié, voulez-vous arrêter la copie?"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - agregation des données d&apos;une transaction issue d&apos;un fichier conforme et qui existe en base de données" classname="RunCucumberTest" time="0.01">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 6 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;le repertoire {string} correctement ouvert&quot;)&#10;public void le_repertoire_correctement_ouvert(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;dont la structure a été correctement identifiée et les numéros de {string}  et l&apos;id  {string} de la banque ont été correctement recupérés&quot;)&#10;public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;je lance l&apos;agregation des données d&apos;une transaction du fichier {string} qui existent déja dans la table Budget&quot;)&#10;public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;le programme lui retournera un message d&apos;erreur de la forme {string}&quot;)&#10;public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;la table budget contiendra les données qui existaient déjà en BD en plus  des nouvelles données de la nouvelle transaction avec redonce&quot;)&#10;public void la_table_budget_contiendra_les_données_qui_existaient_déjà_en_bd_en_plus_des_nouvelles_données_de_la_nouvelle_transaction_avec_redonce() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données d'une transaction du fichier {string} qui existent déja dans la table Budget")
public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui retournera un message d'erreur de la forme {string}")
public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la table budget contiendra les données qui existaient déjà en BD en plus  des nouvelles données de la nouvelle transaction avec redonce")
public void la_table_budget_contiendra_les_données_qui_existaient_déjà_en_bd_en_plus_des_nouvelles_données_de_la_nouvelle_transaction_avec_redonce() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario:&amp#27;[22m agregation des données d'une transaction issue d'un fichier conforme et qui existe en base de données                                        &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:146&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mle repertoire "src/test/resources/com/comptabilitytest/fichier" correctement ouvert&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mdont la structure a été correctement identifiée et les numéros de "compte"  et l'id  "bank" de la banque ont été correctement recupérés&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mje lance l'agregation des données d'une transaction du fichier "fichier" qui existent déja dans la table Budget&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mle programme lui retournera un message d'erreur de la forme "les données de cette transaction existent en BD, voulez-vous copier qaund même?"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mla table budget contiendra les données qui existaient déjà en BD en plus  des nouvelles données de la nouvelle transaction avec redonce&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Fermeture d’un fichier  selon son état - Examples - Example #1.1" classname="RunCucumberTest" time="0.014">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier avec le chemin {string} donc est {string}&quot;)&#10;public void le_fichier_avec_le_chemin_donc_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente de fermer le fichier donc l&apos;etat est {string}&quot;)&#10;public void je_tente_de_fermer_le_fichier_donc_l_etat_est(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher {string}&quot;)&#10;public void le_système_doit_afficher(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier avec le chemin {string} donc est {string}")
public void le_fichier_avec_le_chemin_donc_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente de fermer le fichier donc l'etat est {string}")
public void je_tente_de_fermer_le_fichier_donc_l_etat_est(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher {string}")
public void le_système_doit_afficher(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Fermeture d’un fichier  selon son état                                                                &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:161&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier avec le chemin "src/test/resources/hellocucumber/fichier/CA20250820_115728.csv" donc est "ouverts"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente de fermer le fichier donc l'etat est "ouverts"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "le fichier doit être fermé sans probleme"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="agregation des données dans la table budget - Fermeture d’un fichier  selon son état - Examples - Example #1.2" classname="RunCucumberTest" time="0.011">
    <error message="The step &apos;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&apos; and 4 other step(s) are undefined.&#10;You can implement these steps using the snippet(s) below:&#10;&#10;@Given(&quot;les fichiers suivants sont disponibles dans le répertoire d&apos;entrée&quot;)&#10;public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Données disponibles dans la base de Données&quot;)&#10;public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    // For automatic transformation, change DataTable to one of&#10;    // E, List&lt;E&gt;, List&lt;List&lt;E&gt;&gt;, List&lt;Map&lt;K,V&gt;&gt;, Map&lt;K,V&gt; or&#10;    // Map&lt;K, List&lt;V&gt;&gt;. E,K,V must be a String, Integer, Float,&#10;    // Double, Byte, Short, Long, BigInteger or BigDecimal.&#10;    //&#10;    // For other transformations you can register a DataTableType.&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Given(&quot;Le fichier avec le chemin {string} donc est {string}&quot;)&#10;public void le_fichier_avec_le_chemin_donc_est(String string, String string2) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@When(&quot;Je tente de fermer le fichier donc l&apos;etat est {string}&quot;)&#10;public void je_tente_de_fermer_le_fichier_donc_l_etat_est(String string) {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;@Then(&quot;Le système doit afficher \&quot;une erreur \&quot;fichier déjà fermé\&quot; doit être remontée\&quot;&quot;)&#10;public void le_système_doit_afficher_une_erreur_fichier_déjà_fermé_doit_être_remontée() {&#10;    // Write code here that turns the phrase above into concrete actions&#10;    throw new io.cucumber.java.PendingException();&#10;}&#10;" type="io.cucumber.junit.platform.engine.UndefinedStepException"><![CDATA[io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier avec le chemin {string} donc est {string}")
public void le_fichier_avec_le_chemin_donc_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente de fermer le fichier donc l'etat est {string}")
public void je_tente_de_fermer_le_fichier_donc_l_etat_est(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"fichier déjà fermé\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_fichier_déjà_fermé_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)
]]></error>
    <system-out><![CDATA[
&amp#27;[1mScenario Outline:&amp#27;[22m Fermeture d’un fichier  selon son état                                                                                                  &amp#27;[90m# classpath:hellocucumber/bdd/agregationDesDonnees.feature:162&amp#27;[39m
  &amp#27;[33m■&amp#27;[39m &amp#27;[33m&amp#27;[1mGiven &amp#27;[22mles fichiers suivants sont disponibles dans le répertoire d'entrée&amp#27;[39m
      | fichier                                                                                       |
      | src/test/resources/hellocucumber/fichier/CA20250820_115728.csv                                |
      | src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01047_058113K_du_22-05-2025_au_19-08-2025.csv |
      | src/test/resources/hellocucumber/fichier/T_cpte_01049_911662L_du_22-05-2025_au_19-08-2025.csv |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mAnd &amp#27;[22mDonnées disponibles dans la base de Données&amp#27;[39m
      | id | comment           | title                     | type  | bank_id |
      | 1  | cpt courent       | CCHQ (X1797)              | depot | 2       |
      | 2  | cpt courent       | Compte de dépôts (X1594V) | depot | 3       |
      | 3  | cpt courent femme | compte de depot (X8113K)  | depot | 4       |
      | 4  | cpt pro me lcl    | Compte Courant (x1662L)   | depot | 5       |
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mGiven &amp#27;[22mLe fichier avec le chemin "src/test/resources/hellocucumber/fichier/T_cpte_00737_691594V_du_22-05-2025_au_19-08-2025.csv" donc est "déjà fermé"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mWhen &amp#27;[22mJe tente de fermer le fichier donc l'etat est "déjà fermé"&amp#27;[39m
  &amp#27;[36m↷&amp#27;[39m &amp#27;[36m&amp#27;[1mThen &amp#27;[22mLe système doit afficher "une erreur "fichier déjà fermé" doit être remontée"&amp#27;[39m
]]></system-out>
  </testcase>
  <testcase name="An example - The example" classname="RunCucumberTest" time="0.012">
    <system-out><![CDATA[
&amp#27;[1mScenario:&amp#27;[22m The example                         &amp#27;[90m# classpath:hellocucumber/bdd/example.feature:3&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mGiven &amp#27;[22man example scenario&amp#27;[39m                 &amp#27;[90m# hellocucumber.StepDefinitions.anExampleScenario()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mWhen &amp#27;[22mall step definitions are implemented&amp#27;[39m &amp#27;[90m# hellocucumber.StepDefinitions.allStepDefinitionsAreImplemented()&amp#27;[39m
  &amp#27;[32m✔&amp#27;[39m &amp#27;[32m&amp#27;[1mThen &amp#27;[22mthe scenario passes&amp#27;[39m                  &amp#27;[90m# hellocucumber.StepDefinitions.theScenarioPasses()&amp#27;[39m
]]></system-out>
  </testcase>
</testsuite>