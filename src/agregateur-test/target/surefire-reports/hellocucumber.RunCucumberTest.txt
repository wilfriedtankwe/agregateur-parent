-------------------------------------------------------------------------------
Test set: hellocucumber.RunCucumberTest
-------------------------------------------------------------------------------
Tests run: 35, Failures: 0, Errors: 34, Skipped: 0, Time elapsed: 1.280 s <<< FAILURE! -- in hellocucumber.RunCucumberTest
hellocucumber.RunCucumberTest.agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.1 -- Time elapsed: 0.205 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher {string}")
public void le_système_doit_afficher(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.2 -- Time elapsed: 0.018 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"fichier introuvable\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_fichier_introuvable_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.3 -- Time elapsed: 0.017 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"chemin invalide\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_chemin_invalide_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.4 -- Time elapsed: 0.018 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"permission de lecture refusée\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_permission_de_lecture_refusée_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Ouverture d’un fichier selon son état - Examples - Example #1.5 -- Time elapsed: 0.017 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Un fichier avec le chemin {string} et donc l'etat est {string}")
public void un_fichier_avec_le_chemin_et_donc_l_etat_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente d'ouvrir le fichier")
public void je_tente_d_ouvrir_le_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"fichier illisible\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_fichier_illisible_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - vérification de la structure d'un fichier - Examples - Example #1.1 -- Time elapsed: 0.035 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("que le nom du fichier {string} commence par CA")
public void que_le_nom_du_fichier_commence_par_ca(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je me rend a la ligne onze du fichier {string}")
public void je_me_rend_a_la_ligne_onze_du_fichier(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je dois retrouvé les champs nommés Date;Libell�;D�bit euros;Cr�dit euros;")
public void je_dois_retrouvé_les_champs_nommés_date_libell_d_bit_euros_cr_dit_euros() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - vérification de la structure d'un fichier - Examples - Example #1.1 -- Time elapsed: 0.028 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("que le nom du fichier {string} commence par T_cpte")
public void que_le_nom_du_fichier_commence_par_t_cpte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je me place a la deuxieme ligne et je compte le nombre de colonne du fichier {string}")
public void je_me_place_a_la_deuxieme_ligne_et_je_compte_le_nombre_de_colonne_du_fichier(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je dois obtenir huit colonnes")
public void je_dois_obtenir_huit_colonnes() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - vérification de la structure d'un fichier quelconque - Examples - Example #1.1 -- Time elapsed: 0.023 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("que le nom du fichier ne commence ni par CA ni par T_cpte")
public void que_le_nom_du_fichier_ne_commence_ni_par_ca_ni_par_t_cpte() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("renvoyer un message {string} d'érreur")
public void renvoyer_un_message_d_érreur(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.1 -- Time elapsed: 0.038 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.2 -- Time elapsed: 0.017 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.3 -- Time elapsed: 0.018 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte - Examples - Example #1.4 -- Time elapsed: 0.023 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} valide contenant le numéro de compte {string}")
public void le_système_ouvre_le_fichier_valide_contenant_le_numéro_de_compte(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le système lit le numéro de compte {string}")
public void le_système_lit_le_numéro_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("l'extrait du fichier")
public void l_extrait_du_fichier() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.1 -- Time elapsed: 0.018 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.2 -- Time elapsed: 0.023 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.3 -- Time elapsed: 0.015 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.4 -- Time elapsed: 0.035 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.5 -- Time elapsed: 0.038 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.6 -- Time elapsed: 0.021 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.7 -- Time elapsed: 0.038 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération du numéro de compte avec échec - Examples - Example #1.8 -- Time elapsed: 0.025 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier {string} se trouve dans le répertoire d'entrée")
public void le_fichier_se_trouve_dans_le_répertoire_d_entrée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("le système ouvre le fichier {string} et rencontre la situation {string}")
public void le_système_ouvre_le_fichier_et_rencontre_la_situation(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("une erreur {string} est levée")
public void une_erreur_est_levée(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte non existant - Examples - Example #1.1 -- Time elapsed: 0.013 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte non existant - Examples - Example #1.2 -- Time elapsed: 0.020 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte non existant - Examples - Example #1.3 -- Time elapsed: 0.017 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte non existant - Examples - Example #1.4 -- Time elapsed: 0.026 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne un message d'erreur  {string} si elle ne s'y trouve pas")
public void je_retourne_un_message_d_erreur_si_elle_ne_s_y_trouve_pas(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte existant - Examples - Example #1.1 -- Time elapsed: 0.027 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte existant - Examples - Example #1.2 -- Time elapsed: 0.012 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte existant - Examples - Example #1.3 -- Time elapsed: 0.012 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Récupération de l'id de la banque avec numéro de compte existant - Examples - Example #1.4 -- Time elapsed: 0.012 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("un numero de compte {string}")
public void un_numero_de_compte(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je le formate en une  {string} selon les regles:")
public void je_le_formate_en_une_selon_les_regles(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je recherche valeur formatée dans la colonne {string} de la base")
public void je_recherche_valeur_formatée_dans_la_colonne_de_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("je retourne la valeur {string} correspondante si elle se trouve dans la base")
public void je_retourne_la_valeur_correspondante_si_elle_se_trouve_dans_la_base(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - agregation des données d'une transaction issue d'un fichier conforme et qui n'existe pas en base de données -- Time elapsed: 0.015 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 5 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données des transactions du fichier {string} dans la table budget")
public void je_lance_l_agregation_des_données_des_transactions_du_fichier_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la table budget contiendra les données de la nouvelle transaction le programme lui retournera un message de confirmation de copie de la forme {string}")
public void la_table_budget_contiendra_les_données_de_la_nouvelle_transaction_le_programme_lui_retournera_un_message_de_confirmation_de_copie_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - agregation des données d'une transaction issue d'un fichier conforme et qui existe en base de données -- Time elapsed: 0.017 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données d'une transaction du fichier {string} qui existent déja dans la table Budget")
public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui retournera un message d'erreur de la forme {string}")
public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la copie s'arrête  la table budget ne contient pas de nouvelle valeur")
public void la_copie_s_arrête_la_table_budget_ne_contient_pas_de_nouvelle_valeur() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - agregation des données d'une transaction issue d'un fichier conforme et qui existe en base de données -- Time elapsed: 0.029 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 7 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données d'une transaction du fichier {string} qui existent déja dans la table Budget")
public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui retournera un message d'erreur de la forme {string}")
public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la table budget contiendra les données de la nouvelle transaction qui ont été corectement copié avant cette transaction")
public void la_table_budget_contiendra_les_données_de_la_nouvelle_transaction_qui_ont_été_corectement_copié_avant_cette_transaction() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui posera une question de la forme {string}")
public void le_programme_lui_posera_une_question_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - agregation des données d'une transaction issue d'un fichier conforme et qui existe en base de données -- Time elapsed: 0.010 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("le repertoire {string} correctement ouvert")
public void le_repertoire_correctement_ouvert(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("dont la structure a été correctement identifiée et les numéros de {string}  et l'id  {string} de la banque ont été correctement recupérés")
public void dont_la_structure_a_été_correctement_identifiée_et_les_numéros_de_et_l_id_de_la_banque_ont_été_correctement_recupérés(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("je lance l'agregation des données d'une transaction du fichier {string} qui existent déja dans la table Budget")
public void je_lance_l_agregation_des_données_d_une_transaction_du_fichier_qui_existent_déja_dans_la_table_budget(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("le programme lui retournera un message d'erreur de la forme {string}")
public void le_programme_lui_retournera_un_message_d_erreur_de_la_forme(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("la table budget contiendra les données qui existaient déjà en BD en plus  des nouvelles données de la nouvelle transaction avec redonce")
public void la_table_budget_contiendra_les_données_qui_existaient_déjà_en_bd_en_plus_des_nouvelles_données_de_la_nouvelle_transaction_avec_redonce() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Fermeture d’un fichier  selon son état - Examples - Example #1.1 -- Time elapsed: 0.014 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier avec le chemin {string} donc est {string}")
public void le_fichier_avec_le_chemin_donc_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente de fermer le fichier donc l'etat est {string}")
public void je_tente_de_fermer_le_fichier_donc_l_etat_est(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher {string}")
public void le_système_doit_afficher(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

hellocucumber.RunCucumberTest.agregation des données dans la table budget - Fermeture d’un fichier  selon son état - Examples - Example #1.2 -- Time elapsed: 0.011 s <<< ERROR!
io.cucumber.junit.platform.engine.UndefinedStepException: 
The step 'les fichiers suivants sont disponibles dans le répertoire d'entrée' and 4 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("les fichiers suivants sont disponibles dans le répertoire d'entrée")
public void les_fichiers_suivants_sont_disponibles_dans_le_répertoire_d_entrée(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Données disponibles dans la base de Données")
public void données_disponibles_dans_la_base_de_données(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@Given("Le fichier avec le chemin {string} donc est {string}")
public void le_fichier_avec_le_chemin_donc_est(String string, String string2) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("Je tente de fermer le fichier donc l'etat est {string}")
public void je_tente_de_fermer_le_fichier_donc_l_etat_est(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Le système doit afficher \"une erreur \"fichier déjà fermé\" doit être remontée\"")
public void le_système_doit_afficher_une_erreur_fichier_déjà_fermé_doit_être_remontée() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

	at ✽.les fichiers suivants sont disponibles dans le répertoire d'entrée(classpath:hellocucumber/bdd/agregationDesDonnees.feature:7)

